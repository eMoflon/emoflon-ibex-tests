import "platform:/resource/SheRememberedCaterpillars/model/SheRememberedCaterpillars.ecore"

/**
 * Create a character.
 */
abstract rule createCharacter {
	game: Game {
		++ -characters -> character
	}

	++ character: Character {
		++ -standsOn -> platform
	}

	platform: Platform
}

/**
 * Creates a character of the given color.
 */
rule createCharacterOfColor(color: COLOR)
refines createCharacter {
	++ character: Character {
		.color := param::color
	}
}

/**
 * Creates another character, but not on an exit platform.
 */
rule createCharacterOfColorOnEmptyPlatform
refines createCharacterOfColor
when noOtherCharacterOnPlatform

condition noOtherCharacterOnPlatform = forbid otherCharacterOnPlatform

abstract pattern otherCharacterOnPlatform {
	platform: Platform {
		-charactersStandingOn -> anotherCharacter
	}
	
	anotherCharacter: Character
}

/**
 * Creates a blue character.
 */
rule createBlueCharacter
refines createCharacter {
	++ character: Character {
		.color := enum::BLUE
	}
}

/**
 * Creates a red character.
 */
rule createRedCharacter
refines createCharacter {
	++ character: Character {
		.color := enum::RED
	}
}

/**
 * Creates a purple character.
 */
rule createPurpleCharacter
refines createCharacter {
	++ character: Character {
		.color := enum::BLUE
	}
}
