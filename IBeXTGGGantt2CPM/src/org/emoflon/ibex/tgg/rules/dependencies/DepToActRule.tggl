abstract rule DepToActRule {
	
	source { 
		[=] diag:G.GanttDiagram
		[=] pred:G.Activity
		[=] succ:G.Activity
		
		[+] dep:G.Dependency {
			[+] -predecessor->pred
			[+] -successor->succ
			[+] -diagram->diag
		}
	}
	
	target {
		[=] network:C.CPMNetwork
		
		[=] cpmPred:C.Activity 
		[=] cpmSucc:C.Activity 
		
		[=] src:C.Event {
			[=] -network->network
		}
		
		[=] trg:C.Event {
			[=] -network->network
		}
		
		[+] act:C.Activity {
			[+] -sourceEvent->src
			[+] -targetEvent->trg
			
			[+] -network->network
		}
	}
	
	correspondence {
		[=] d2n:DiagramToNetwork {
			src->diag
			trg->network
		}
		
		[=] s2s:ActivityToActivity {
			src->succ
			trg->cpmSucc
		}
		
		[=] p2p:ActivityToActivity {
			src->pred
			trg->cpmPred
		}
		
		[+] a2d:DependencyToActivity {
			src->dep
			trg->act
		}
	}
	
	attributeConditions {
		DefaultAttributeConditionLibrary.eq_int(dep.offset, act.duration)
		DefaultAttributeConditionLibrary.concat("->", pred.name, succ.name, act.name)
	}

}


