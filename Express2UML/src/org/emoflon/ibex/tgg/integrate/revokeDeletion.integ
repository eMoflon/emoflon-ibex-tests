package Express2UML.operationaldelta

import Entity2Clazz

revokeDeletionOnSource: solve conflict for all {
	var elementsDeleted = src | deleted | exists
	satisfies {
		elementsDeleted
	}
} with revokeDeletion when {
	var elementsToBeCreatedOnSource = src | created | count
	var elementsToBeDeletedOnSource = src | deleted | count 
	var elementsToBeCreatedOnTarget = trg | created | count
	var elementsToBeDeletedOnTarget = trg | deleted | count 
	
	satisfies {
		elementsToBeCreatedOnSource == 1 and
		elementsToBeDeletedOnSource == 0 and 
		elementsToBeCreatedOnTarget == 0 and
		elementsToBeDeletedOnTarget == 0
	}
}

revokeDeletionOnTarget: solve conflict for all {
	var elementsDeleted = trg | deleted | exists
	satisfies {
		elementsDeleted
	}
} with revokeDeletion when {
	var elementsToBeCreatedOnSource = src | created | count
	var elementsToBeDeletedOnSource = src | deleted | count 
	var elementsToBeCreatedOnTarget = trg | created | count
	var elementsToBeDeletedOnTarget = trg | deleted | count 
	
	satisfies {
		elementsToBeCreatedOnSource == 0 and
		elementsToBeDeletedOnSource == 0 and 
		elementsToBeCreatedOnTarget == 1 and
		elementsToBeDeletedOnTarget == 0
	}
}

