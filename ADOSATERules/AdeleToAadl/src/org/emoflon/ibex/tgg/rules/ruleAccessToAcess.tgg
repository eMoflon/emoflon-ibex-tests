#using AdeleToAadl.*
#using AttrCondDefLibrary.*

#rule ruleAccessToAcess #with AdeleToAadl

#source { 
	adeleType:Adele.Component
	{
		++ -adeleAccess->adeleAccess
	}
	
		++adeleAccess:Adele.Access
	
}

#target {
	 aadleType:Aadl.ComponentType{
  	++ -ownedFeature->aadlAccess
  }
	++aadlAccess:Aadl.Access
}

#correspondence {
	adleTypeToaadlComponent:AdeleTypeToAadlComponent{
		#src->adeleType
        #trg->aadleType
	}
	++adleaccessToaadlaccess:AdeleAccessToAadlAccess{
	   #src->adel#import "platform:/resource/Aadl/model/Aadl.ecore"
#import "platform:/resource/Adele/model/Adele.ecore"

#schema AdeleToAadl
	
#source {
	Adele
}

#target { 
	Aadl
} 

#correspondence {
	
	CorrComponentType
	{
	#src->Adele.Component
	#trg->Aadl.ComponentType
    }	
    // same src different trg with same corr
    CorrComponentTypeTE
	{
	#src->Adele.Component
	#trg->Aadl.TypeExtension
    }	
    // different src and trg same corr
    CorrComponentTypeFG
    {
    #src->Adele.FeatureGroup
    #trg->Aadl.FeatureGroupType
    }
    
     CorrComponentTypeGE
    {
    #src->Adele.FeatureGroup
    #trg->Aadl.GroupExtension
    }
    
    
    	
	CorrAccess
	{
        #src->Adele.Access
	#trg->Aadl.Access
	}
	
	
	CorrFeature
	{
	#src->Adele.Feature
	#trg->Aadl.Feature
	}
	
	
	CorrComponent
	{
	#src->Adele.Component
	#trg->Aadl.FeatureClassifier
	}
	
	CorrComponentSCT
	{
	#src->Adele.Component
	#trg->Aadl.SubcomponentType
	}
	// Corr same like corrcomponent bt src and trg is different
	CorrComponentSKC
	{
	#src->Adele.SKComponent
	#trg->Aadl.Classifier
	}
	// Different trg
	CorrComponentDST
	{
	#src->Adele.Component
	#trg->Aadl.DataSubcomponentType
	}
	
	
	CorrComponentImplementation
	{
	#src->Adele.Component
	#trg->Aadl.ComponentImplementation
	}
	
	
	CorrComponentImplementationR
	{
	#src->Adele.Component
	#trg->Aadl.Realization
	}
	eAccess
       #trg->aadlAccess
	}
	
}

#attributeConditions {
	
}
