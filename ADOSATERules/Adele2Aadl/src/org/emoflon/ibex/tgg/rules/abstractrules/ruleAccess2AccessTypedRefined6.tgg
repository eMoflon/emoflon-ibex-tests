#using Adele2Aadl.*
#using AttrCondDefLibrary.*

#abstract #rule ruleAccess2AccessTypedRefined6 #with Adele2Aadl

#source { 
	adeleType:ADELE_Components.Component{
		++ -features -> adeleAccess
	}
	++ adeleAccess:ADELE_Features.Access{
		++-refinedFeature->adeleRefinedFeature
		++-classifier->adeleClassifier
	}
adeleRefinedFeature:Feature
adeleClassifier:Component

}


#target {
	
	aadlType:ComponentType{
		
		++ -ownedFeature->aadlAccess

}
++ aadlAccess:Access{
	++-refined->aadlRefinedFeature
		++-featureClassifier->aadlClassifier
}
aadlRefinedFeature:Feature
aadlClassifier:FeatureClassifier
}

#correspondence {
	corrType:CorrComponentType{
		#src->adeleType
        #trg->aadlType
	}
	++corrAccess:CorrAccess{
	   #src->adeleAccess
       #trg->aadlAccess
	}
	corrRefinedFeature:CorrFeature
	{
		#src->adeleRefinedFeature
		#trg->aadlRefinedFeature
	}
	corrClassifier:CorrComponent{
		#src->adeleClassifier
		#trg->aadlClassifier
		
	}
	
}

#attributeConditions {
	eq_string(adeleAccess.name, aadlAccess.name)
	
}



