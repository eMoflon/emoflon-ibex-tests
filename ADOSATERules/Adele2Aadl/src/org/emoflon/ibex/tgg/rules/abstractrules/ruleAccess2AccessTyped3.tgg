#using Adele2Aadl.*
#using AttrCondDefLibrary.*

#abstract #rule ruleAccess2AccessTyped3 #with Adele2Aadl

#source { 
	adeleType:ADELE_Components.Component
	{
		++ -features->adeleAccess
	
	}
	++adeleAccess:ADELE_Features.Access
	{
		++ -classifier->adeleClassifier
	}
	adeleClassifier: ADELE_Components.Component
}

#target {
	aadleType:aadl2.ComponentType
	{
		++ -ownedFeature->aadlAccess	
	}
	++aadlAccess:aadl2.Access
	{
		++ -featureClassifier-> aadlClassifier
		
	}
	
	aadlClassifier:aadl2.FeatureClassifier
	
	
}

#correspondence {
	corrType:CorrComponentType{
		#src->adeleType
        #trg->aadleType
	}
	++corrAccess:CorrAccess{
	   #src->adeleAccess
       #trg->aadlAccess
	}
	corrComponentClassifier:CorrComponent
	{
		#src->adeleClassifier
		#trg->aadlClassifier
	}	
}

#attributeConditions {
	eq_string(adeleAccess.name, aadlAccess.name)
	
}
#rule ruleAccess2AccessTypedabstract #extends ruleAccess2AccessTyped3 #with Adele2Aadl

#source
{
	++adeleAccess:ADELE_Features.DataAccess
}
#target
{
	++aadlAccess:aadl2.DataAccess
}

