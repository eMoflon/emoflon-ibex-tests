#using Adele2Aadl.*
#using AttrCondDefLibrary.*

#abstract #rule ruleAccess2Access1 #with Adele2Aadl
//rule one
#source { 
	adeleType:ADELE_Components.Component
	{
		++ -features->adeleAccess 
	}
	
		++adeleAccess:ADELE_Features.Access
	
}

#target {
	 aadlType:aadl2.ComponentType
	 {
  	++ -ownedFeature->aadlAccess
  }
	++aadlAccess:aadl2.Access
}

#correspondence {
	corrType:CorrComponentType{
		#src->adeleType
        #trg->aadlType
	}
	++corrAccess:CorrAccess{
	   #src->adeleAccess
       #trg->aadlAccess
	}
	
}

#attributeConditions {
	eq_string(adeleAccess.name, aadlAccess.name)
    accessdirection(adeleAccess.direction, aadlAccess.kind)
	
}

#abstract #rule ruleAccess2Accessabstract #extends ruleAccess2Access1 #with Adele2Aadl

#source
{
	++adeleAccess:ADELE_Features.BusAccess
} 
#target
{
	
	++aadlAccess:aadl2.BusAccess
}

#rule ruleAccess2AccessSystem #extends ruleAccess2Access1 #with Adele2Aadl

#source
{
	adeleType:ADELE_Components.System
	
    ++adeleAccess:ADELE_Features.DataAccess
}

#target
{
	aadlType:aadl2.SystemType
	{
		++ -ownedDataAccess->aadlAccess
	}
    
    ++aadlAccess:aadl2.DataAccess
}
