#using Adele2Aadl.*
#using AttrCondDefLibrary.*

#abstract #rule ruleDirectedFeat2DirectedFeatRefined33 #with Adele2Aadl

#source { 
	adeleType:ADELE_Components.Component
	{
		++ - features-> adeleFeature
	}
	++adeleFeature: ADELE_Features.DirectedFeature{
	++ -refinedFeature->adeleRefinedFeature
	}
	adeleRefinedFeature:ADELE_Features.Feature
	
}

#target {
	aadlType: aadl2.ComponentType
	{
		++ - ownedFeature -> aadlFeature
	}
	++aadlFeature: aadl2.DirectedFeature
	{
		++ -refined->aadlRefinedFeature
	}
	aadlRefinedFeature:aadl2.Feature
}

#correspondence {
	
	corrType: CorrComponentType
	{
		#src-> adeleType
		#trg-> aadlType
	}
	++corrFeature: CorrDirectedFeature
	{
		#src->adeleFeature
		#trg->aadlFeature
	}
	corrRefinedFeature:CorrFeature{
		#src->adeleRefinedFeature
		#trg->aadlRefinedFeature
	}
	
}



#attributeConditions {
	eq_string(adeleFeature.name, aadlFeature.name)
}
#rule ruleDirectedFeat2DirectedFeatRefinedAbstractFeature #extends ruleDirectedFeat2DirectedFeatRefined33 #with Adele2Aadl

#source { 
	adeleType:ADELE_Components.System
	++adeleFeature: ADELE_Features.DataPort{
		++ -refinedFeature->adeleRefinedFeature
	}
	adeleRefinedFeature:ADELE_Features.AbstractFeature
}
#target {
	aadlType:aadl2.SystemType
		{
		++ -ownedDataPort->aadlFeature
	
	}
	++aadlFeature: aadl2.DataPort{
		++ -refined->aadlRefinedFeature
	}
	aadlRefinedFeature:aadl2.AbstractFeature
}
#correspondence{
	corrRefinedFeature:CorrDirectedFeature{
		#src->adeleRefinedFeature
		#trg->aadlRefinedFeature
	}
}
