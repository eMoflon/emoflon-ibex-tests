package component_type
public
with external_specification1;
with external_specification2;
	system System0 extends external_specification1::System_Parent
	end System0;

	system System1 extends System0
	end System1;

	process Process0
	end Process0;

	process Process1 extends Process0
	end Process1;

	thread group ThreadGroup0
	end ThreadGroup0;

	thread group ThreadGroup1 extends ThreadGroup0
	end ThreadGroup1;

	bus Bus0
	end Bus0;

	bus Bus1 extends Bus0
	end Bus1;

	virtual bus VirtualBus0
	end VirtualBus0;

	virtual bus VirtualBus1 extends VirtualBus0
	end VirtualBus1;
	
	abstract Abstract0
	end Abstract0;
	
	device Device0
	end Device0;
	
	device Device1 extends Abstract0
	end Device1;
	
	data Data1 extends external_specification2::Data_Parent
	end Data1;

	feature group FeatureGroup0
	features
		fg0Feature0 : in feature;
		fg0Feature1 : out feature;
		fg0Feature2 : feature;
	end FeatureGroup0;

	feature group FeatureGroup1 extends FeatureGroup0
	features
		fg0Feature0 : refined to in event port;
		fg1Feature1 : requires data access Data1;
	end FeatureGroup1;

	feature group FeatureGroup2 inverse of FeatureGroup1
	end FeatureGroup2;

	feature group FeatureGroup3
	features
		fg3EventDataPort0 : out event data port external_specification2::Data_Parent;
	end FeatureGroup3;

	feature group FeatureGroup4 extends FeatureGroup3
	features
		fg3EventDataPort0 : refined to out event data port Data1;
	end FeatureGroup4;
	
	--TODO: Find a case for inverse and extends.

end component_type;