import "platform:/resource/FerrymanProblem/model/FerrymanProblem.ecore"

/**
 * Finds any bank.
 */
rule findBank {
	bank: Bank
}

/**
 * Finds the left bank.
 */
rule findLeftBank
refines findBank {
	model: Model {
		-leftBank -> bank
	}
}

/**
 * Finds the right bank.
 */
rule findRightBank
refines findBank {
	model: Model {
		-rightBank -> bank
	}
}

/**
 * Finds a subject on its bank.
 */
rule findSubjectOnBank
refines findBank {
	subject: Subject {
		-isAt -> bank
	}
}

/**
 * Finds a subject on the left bank.
 */
rule findSubjectOnLeftBank
refines findSubjectOnBank, findLeftBank

/**
 * Finds a subject on the right bank.
 */
rule findSubjectOnRightBank
refines findSubjectOnBank, findRightBank

/**
 * Checks whether all things are at the right bank.
 * This should hold at the end.
 */
rule checkAllThingsAtRightBank
refines findRightBank {
	wolf: Wolf {
		-isAt -> bank
	}

	goat: Goat {
		-isAt -> bank
	}

	cabbage: Cabbage {
		-isAt -> bank
	}
}

/**
 * Finds the cabbage.
 */
rule findCabbage
refines findBank {
	cabbage: Cabbage {
		-isAt -> bank
	}
}

/**
 * Finds the goat
 */
rule findGoat
refines findBank {
	goat: Goat {
		-isAt -> bank
	}
}

/**
 * Finds the wolf.
 */
rule findWolf
refines findBank{
	wolf: Wolf {
		-isAt -> bank
	}
}
