import "http://www.eclipse.org/emf/2002/Ecore"
import "platform:/resource/SimpleFamilies/model/SimpleFamilies.ecore"

/**
 * Adds a member with the given first name.
 */
abstract rule addMember(name: EString) {
	++ member: FamilyMember {
		.name := param::name
	}
}

/**
 * Adds a daughter with the given first name to an existing family.
 */
rule addDaughter(name: EString)
refines addMember {
	family: Family {
		++ -daughters -> member
	}
}

/**
 * Adds a father with the given first name to an existing family.
 */
rule addFather(name: EString)
refines addMember {
	family: Family {
		++ -father -> member
	}
}

/**
 * Adds a mother with the given first name to an existing family.
 */
rule addMother(name: EString)
refines addMember {
	family: Family {
		++ -mother -> member
	}
}

/**
 * Adds a son with the given first name to an existing family.
 */
rule addSon(name: EString)
refines addMember {
	family: Family {
		++ -sons -> member
	}
}

/**
 * Finds a family member.
 */
abstract pattern findMember {
	member: FamilyMember
}

/**
 * Finds a daughter.
 */
pattern findDaughter
refines findMember {
	family: Family {
		-daughters -> member
	}
}

/**
 * Finds a father.
 */
pattern findFather
refines findMember {
	family: Family {
		-father -> member
	}
}

/**
 * Finds a mother.
 */
pattern findMother
refines findMember {
	family: Family {
		-mother -> member
	}
}

/**
 * Finds a son.
 */
pattern findSon
refines findMember {
	family: Family {
		-sons -> member
	}
}

/**
 * Finds a family member by his/her first name.
 */
pattern findMemberByFirstName(firstName: EString) {
	member: FamilyMember {
		.name == param::firstName
	}
}
