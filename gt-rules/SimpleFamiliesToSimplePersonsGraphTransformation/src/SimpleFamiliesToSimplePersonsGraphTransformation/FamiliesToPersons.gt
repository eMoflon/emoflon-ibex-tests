import "platform:/resource/SimpleFamilies/model/SimpleFamilies.ecore"
import "platform:/resource/SimplePersons/model/SimplePersons.ecore"

/**
 * Creates a family register for a person register.
 */
rule familyRegisterToPersonRegister {
	familyRegister: FamilyRegister

	++ personRegister: PersonRegister
}

abstract rule memberToPerson {
	member: FamilyMember

	personRegister: PersonRegister {
		++ -persons -> person
	}

	++ person: Person
}

abstract rule memberToFemale
refines memberToPerson {
	++ person: Female
}

/**
 * Creates a female for a mother.
 */
rule motherToFemale
refines memberToFemale {
	family: Family {
		-mother -> member
	}
}

/**
 * Creates a female for a daughter.
 */
rule daughterToFemale
refines memberToFemale {
	family: Family {
		-daughters -> member
	}
}

abstract rule memberToMale
refines memberToPerson {
	++ person: Male
}

/**
 * Creates a male for a father.
 */
rule fatherToMale
refines memberToMale {
	family: Family {
		-father -> member
	}
}

/**
 * Creates a male for a son.
 */
rule sonToMale
refines memberToMale {
	family: Family {
		-sons -> member
	}
}
