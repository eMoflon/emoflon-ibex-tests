package bpmn.gt
import "http://www.eclipse.org/emf/2002/Ecore"
import "platform:/resource/BPMN/model/BPMN.ecore"

/**
 * Finds a task.
 */
pattern findTask {
	[=] task: Task 
};

/**
 * Finds a task with the given name.
 */
pattern findTaskByName(name: EString) {
	[=] task: Task
	// TODO: allow parameterized constraints!
	//[#] task.name == param::name
};

/**
 * Adds a task.
 */
abstract rule addTask(name: EString) {
	[+] newTask: Task {
		.name := parameter.name;
	}

	[+] newFlow: SequenceFlow
};

/**
 * Inserts a task before another task.
 */
rule addTaskBefore
refines addTask {
	[+] to: Task {
		[+] -incoming -> newFlow
	}

	@refines+ addTask.newTask
	[+] newTask: Task {
		[+] -outgoing -> newFlow
	}
};

//TODO:

///**
// * Inserts a task between two other tasks.
// */
//rule addTaskBetween
//refines addTask {
//	[#] src : Task {
//		-outgoing -> flow
//	}
//	
//	@
//	[#] to: Task {
//		-- -incoming -> flow
//		++ -incoming -> newFlow
//	}
//
//	flow: SequenceFlow
//
//	++ newTask: Task {
//		++ -outgoing -> newFlow
//		++ -incoming -> flow
//	}
//}
//
///**
// * Inserts a task after another task.
// */
//rule addTaskAfter
//refines addTask {
//	from: Task {
//		++ -outgoing -> newFlow
//	}
//
//	++ newTask: Task {
//		++ -incoming -> newFlow
//	}
//}
//
///**
// * Removes a task.
// */
//rule removeTask {
//	-- task: Task
//}
