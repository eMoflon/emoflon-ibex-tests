/*
 * generated by Xtext 2.37.0
 */
grammar InternalExpress;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.emoflon.express.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.emoflon.express.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.emoflon.express.services.ExpressGrammarAccess;

}

@parser::members {

 	private ExpressGrammarAccess grammarAccess;

    public InternalExpressParser(TokenStream input, ExpressGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "SchemaContainer";
   	}

   	@Override
   	protected ExpressGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleSchemaContainer
entryRuleSchemaContainer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSchemaContainerRule()); }
	iv_ruleSchemaContainer=ruleSchemaContainer
	{ $current=$iv_ruleSchemaContainer.current; }
	EOF;

// Rule SchemaContainer
ruleSchemaContainer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getSchemaContainerAccess().getSchemasSchemaParserRuleCall_0());
			}
			lv_schemas_0_0=ruleSchema
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getSchemaContainerRule());
				}
				add(
					$current,
					"schemas",
					lv_schemas_0_0,
					"org.emoflon.express.Express.Schema");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleSchema
entryRuleSchema returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSchemaRule()); }
	iv_ruleSchema=ruleSchema
	{ $current=$iv_ruleSchema.current; }
	EOF;

// Rule Schema
ruleSchema returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SCHEMA'
		{
			newLeafNode(otherlv_0, grammarAccess.getSchemaAccess().getSCHEMAKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSchemaAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSchemaRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getSchemaAccess().getSemicolonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSchemaAccess().getDeclarationsDeclarationParserRuleCall_3_0());
				}
				lv_declarations_3_0=ruleDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSchemaRule());
					}
					add(
						$current,
						"declarations",
						lv_declarations_3_0,
						"org.emoflon.express.Express.Declaration");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='END_SCHEMA;'
		{
			newLeafNode(otherlv_4, grammarAccess.getSchemaAccess().getEND_SCHEMAKeyword_4());
		}
	)
;

// Entry rule entryRuleDeclaration
entryRuleDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclarationRule()); }
	iv_ruleDeclaration=ruleDeclaration
	{ $current=$iv_ruleDeclaration.current; }
	EOF;

// Rule Declaration
ruleDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDeclarationAccess().getUserDefinedTypeParserRuleCall_0());
		}
		this_UserDefinedType_0=ruleUserDefinedType
		{
			$current = $this_UserDefinedType_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDeclarationAccess().getFunctionParserRuleCall_1());
		}
		this_Function_1=ruleFunction
		{
			$current = $this_Function_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDeclarationAccess().getUseFromParserRuleCall_2());
		}
		this_UseFrom_2=ruleUseFrom
		{
			$current = $this_UseFrom_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleReferenceOrValue
entryRuleReferenceOrValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReferenceOrValueRule()); }
	iv_ruleReferenceOrValue=ruleReferenceOrValue
	{ $current=$iv_ruleReferenceOrValue.current; }
	EOF;

// Rule ReferenceOrValue
ruleReferenceOrValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReferenceOrValueRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getReferenceOrValueAccess().getReferenceUserDefinedTypeCrossReference_0_0());
				}
			)
		)
		    |
		(
			(
				(
					lv_value_1_1='INTEGER'
					{
						newLeafNode(lv_value_1_1, grammarAccess.getReferenceOrValueAccess().getValueINTEGERKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getReferenceOrValueRule());
						}
						setWithLastConsumed($current, "value", lv_value_1_1, null);
					}
					    |
					lv_value_1_2='BOOLEAN'
					{
						newLeafNode(lv_value_1_2, grammarAccess.getReferenceOrValueAccess().getValueBOOLEANKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getReferenceOrValueRule());
						}
						setWithLastConsumed($current, "value", lv_value_1_2, null);
					}
					    |
					lv_value_1_3='STRING'
					{
						newLeafNode(lv_value_1_3, grammarAccess.getReferenceOrValueAccess().getValueSTRINGKeyword_1_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getReferenceOrValueRule());
						}
						setWithLastConsumed($current, "value", lv_value_1_3, null);
					}
				)
			)
		)
	)
;

// Entry rule entryRuleUserDefinedType
entryRuleUserDefinedType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUserDefinedTypeRule()); }
	iv_ruleUserDefinedType=ruleUserDefinedType
	{ $current=$iv_ruleUserDefinedType.current; }
	EOF;

// Rule UserDefinedType
ruleUserDefinedType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getUserDefinedTypeAccess().getSelectTypeParserRuleCall_0());
		}
		this_SelectType_0=ruleSelectType
		{
			$current = $this_SelectType_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getUserDefinedTypeAccess().getEnumerationTypeParserRuleCall_1());
		}
		this_EnumerationType_1=ruleEnumerationType
		{
			$current = $this_EnumerationType_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getUserDefinedTypeAccess().getAliasTypeParserRuleCall_2());
		}
		this_AliasType_2=ruleAliasType
		{
			$current = $this_AliasType_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getUserDefinedTypeAccess().getEntityParserRuleCall_3());
		}
		this_Entity_3=ruleEntity
		{
			$current = $this_Entity_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleUseFrom
entryRuleUseFrom returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUseFromRule()); }
	iv_ruleUseFrom=ruleUseFrom
	{ $current=$iv_ruleUseFrom.current; }
	EOF;

// Rule UseFrom
ruleUseFrom returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='USE'
		{
			newLeafNode(otherlv_0, grammarAccess.getUseFromAccess().getUSEKeyword_0());
		}
		otherlv_1='FROM'
		{
			newLeafNode(otherlv_1, grammarAccess.getUseFromAccess().getFROMKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUseFromRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getUseFromAccess().getSchemaSchemaCrossReference_2_0());
				}
			)
		)
		(
			otherlv_3='('
			{
				newLeafNode(otherlv_3, grammarAccess.getUseFromAccess().getLeftParenthesisKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUseFromAccess().getImportedEntitiesImportedEntityListParserRuleCall_3_1_0());
					}
					lv_importedEntities_4_0=ruleImportedEntityList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUseFromRule());
						}
						set(
							$current,
							"importedEntities",
							lv_importedEntities_4_0,
							"org.emoflon.express.Express.ImportedEntityList");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=')'
			{
				newLeafNode(otherlv_5, grammarAccess.getUseFromAccess().getRightParenthesisKeyword_3_2());
			}
		)?
	)
;

// Entry rule entryRuleImportedEntityList
entryRuleImportedEntityList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportedEntityListRule()); }
	iv_ruleImportedEntityList=ruleImportedEntityList
	{ $current=$iv_ruleImportedEntityList.current; }
	EOF;

// Rule ImportedEntityList
ruleImportedEntityList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getImportedEntityListAccess().getEntitiesImportedEntityParserRuleCall_0_0());
				}
				lv_entities_0_0=ruleImportedEntity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImportedEntityListRule());
					}
					add(
						$current,
						"entities",
						lv_entities_0_0,
						"org.emoflon.express.Express.ImportedEntity");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getImportedEntityListAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getImportedEntityListAccess().getEntitiesImportedEntityParserRuleCall_1_1_0());
					}
					lv_entities_2_0=ruleImportedEntity
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImportedEntityListRule());
						}
						add(
							$current,
							"entities",
							lv_entities_2_0,
							"org.emoflon.express.Express.ImportedEntity");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleImportedEntity
entryRuleImportedEntity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportedEntityRule()); }
	iv_ruleImportedEntity=ruleImportedEntity
	{ $current=$iv_ruleImportedEntity.current; }
	EOF;

// Rule ImportedEntity
ruleImportedEntity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImportedEntityRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getImportedEntityAccess().getEntityEntityCrossReference_0_0());
				}
			)
		)
		(
			otherlv_1='AS'
			{
				newLeafNode(otherlv_1, grammarAccess.getImportedEntityAccess().getASKeyword_1_0());
			}
			(
				(
					lv_alias_2_0=RULE_ID
					{
						newLeafNode(lv_alias_2_0, grammarAccess.getImportedEntityAccess().getAliasIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getImportedEntityRule());
						}
						setWithLastConsumed(
							$current,
							"alias",
							lv_alias_2_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleSelectType
entryRuleSelectType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectTypeRule()); }
	iv_ruleSelectType=ruleSelectType
	{ $current=$iv_ruleSelectType.current; }
	EOF;

// Rule SelectType
ruleSelectType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='TYPE'
		{
			newLeafNode(otherlv_0, grammarAccess.getSelectTypeAccess().getTYPEKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSelectTypeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSelectTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getSelectTypeAccess().getEqualsSignKeyword_2());
		}
		otherlv_3='SELECT'
		{
			newLeafNode(otherlv_3, grammarAccess.getSelectTypeAccess().getSELECTKeyword_3());
		}
		otherlv_4='('
		{
			newLeafNode(otherlv_4, grammarAccess.getSelectTypeAccess().getLeftParenthesisKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectTypeAccess().getTypesUserDefinedTypeListParserRuleCall_5_0());
				}
				lv_types_5_0=ruleUserDefinedTypeList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectTypeRule());
					}
					set(
						$current,
						"types",
						lv_types_5_0,
						"org.emoflon.express.Express.UserDefinedTypeList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=');'
		{
			newLeafNode(otherlv_6, grammarAccess.getSelectTypeAccess().getRightParenthesisSemicolonKeyword_6());
		}
		otherlv_7='END_TYPE;'
		{
			newLeafNode(otherlv_7, grammarAccess.getSelectTypeAccess().getEND_TYPEKeyword_7());
		}
	)
;

// Entry rule entryRuleEnumerationType
entryRuleEnumerationType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumerationTypeRule()); }
	iv_ruleEnumerationType=ruleEnumerationType
	{ $current=$iv_ruleEnumerationType.current; }
	EOF;

// Rule EnumerationType
ruleEnumerationType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='TYPE'
		{
			newLeafNode(otherlv_0, grammarAccess.getEnumerationTypeAccess().getTYPEKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEnumerationTypeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumerationTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getEnumerationTypeAccess().getEqualsSignKeyword_2());
		}
		otherlv_3='ENUMERATION'
		{
			newLeafNode(otherlv_3, grammarAccess.getEnumerationTypeAccess().getENUMERATIONKeyword_3());
		}
		otherlv_4='OF'
		{
			newLeafNode(otherlv_4, grammarAccess.getEnumerationTypeAccess().getOFKeyword_4());
		}
		otherlv_5='('
		{
			newLeafNode(otherlv_5, grammarAccess.getEnumerationTypeAccess().getLeftParenthesisKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumerationTypeAccess().getValuesEnumerationValueParserRuleCall_6_0());
				}
				lv_values_6_0=ruleEnumerationValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumerationTypeRule());
					}
					add(
						$current,
						"values",
						lv_values_6_0,
						"org.emoflon.express.Express.EnumerationValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_7=','
			{
				newLeafNode(otherlv_7, grammarAccess.getEnumerationTypeAccess().getCommaKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEnumerationTypeAccess().getValuesEnumerationValueParserRuleCall_7_1_0());
					}
					lv_values_8_0=ruleEnumerationValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEnumerationTypeRule());
						}
						add(
							$current,
							"values",
							lv_values_8_0,
							"org.emoflon.express.Express.EnumerationValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_9=');'
		{
			newLeafNode(otherlv_9, grammarAccess.getEnumerationTypeAccess().getRightParenthesisSemicolonKeyword_8());
		}
		otherlv_10='END_TYPE;'
		{
			newLeafNode(otherlv_10, grammarAccess.getEnumerationTypeAccess().getEND_TYPEKeyword_9());
		}
	)
;

// Entry rule entryRuleEnumerationValue
entryRuleEnumerationValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumerationValueRule()); }
	iv_ruleEnumerationValue=ruleEnumerationValue
	{ $current=$iv_ruleEnumerationValue.current; }
	EOF;

// Rule EnumerationValue
ruleEnumerationValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getEnumerationValueAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getEnumerationValueRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleAliasType
entryRuleAliasType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAliasTypeRule()); }
	iv_ruleAliasType=ruleAliasType
	{ $current=$iv_ruleAliasType.current; }
	EOF;

// Rule AliasType
ruleAliasType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='TYPE'
		{
			newLeafNode(otherlv_0, grammarAccess.getAliasTypeAccess().getTYPEKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getAliasTypeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAliasTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getAliasTypeAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAliasTypeRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getAliasTypeAccess().getElementUserDefinedTypeCrossReference_3_0());
				}
			)
		)
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getAliasTypeAccess().getSemicolonKeyword_4());
		}
		otherlv_5='END_TYPE;'
		{
			newLeafNode(otherlv_5, grammarAccess.getAliasTypeAccess().getEND_TYPEKeyword_5());
		}
	)
;

// Entry rule entryRuleEntity
entryRuleEntity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntityRule()); }
	iv_ruleEntity=ruleEntity
	{ $current=$iv_ruleEntity.current; }
	EOF;

// Rule Entity
ruleEntity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ENTITY'
		{
			newLeafNode(otherlv_0, grammarAccess.getEntityAccess().getENTITYKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEntityRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getEntityAccess().getSemicolonKeyword_2());
		}
		(
			otherlv_3='SUPERTYPE'
			{
				newLeafNode(otherlv_3, grammarAccess.getEntityAccess().getSUPERTYPEKeyword_3_0());
			}
			otherlv_4='OF'
			{
				newLeafNode(otherlv_4, grammarAccess.getEntityAccess().getOFKeyword_3_1());
			}
			otherlv_5='('
			{
				newLeafNode(otherlv_5, grammarAccess.getEntityAccess().getLeftParenthesisKeyword_3_2());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEntityRule());
						}
					}
					otherlv_6=RULE_ID
					{
						newLeafNode(otherlv_6, grammarAccess.getEntityAccess().getSubTypeEntityCrossReference_3_3_0());
					}
				)
			)
			otherlv_7=');'
			{
				newLeafNode(otherlv_7, grammarAccess.getEntityAccess().getRightParenthesisSemicolonKeyword_3_4());
			}
		)?
		(
			otherlv_8='SUBTYPE'
			{
				newLeafNode(otherlv_8, grammarAccess.getEntityAccess().getSUBTYPEKeyword_4_0());
			}
			otherlv_9='OF'
			{
				newLeafNode(otherlv_9, grammarAccess.getEntityAccess().getOFKeyword_4_1());
			}
			otherlv_10='('
			{
				newLeafNode(otherlv_10, grammarAccess.getEntityAccess().getLeftParenthesisKeyword_4_2());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEntityRule());
						}
					}
					otherlv_11=RULE_ID
					{
						newLeafNode(otherlv_11, grammarAccess.getEntityAccess().getSuperTypeEntityCrossReference_4_3_0());
					}
				)
			)
			otherlv_12=');'
			{
				newLeafNode(otherlv_12, grammarAccess.getEntityAccess().getRightParenthesisSemicolonKeyword_4_4());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getEntityAccess().getAttributesAttributeParserRuleCall_5_0());
				}
				lv_attributes_13_0=ruleAttribute
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntityRule());
					}
					add(
						$current,
						"attributes",
						lv_attributes_13_0,
						"org.emoflon.express.Express.Attribute");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_14='END_ENTITY;'
		{
			newLeafNode(otherlv_14, grammarAccess.getEntityAccess().getEND_ENTITYKeyword_6());
		}
	)
;

// Entry rule entryRuleFunction
entryRuleFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionRule()); }
	iv_ruleFunction=ruleFunction
	{ $current=$iv_ruleFunction.current; }
	EOF;

// Rule Function
ruleFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='FUNCTION'
		{
			newLeafNode(otherlv_0, grammarAccess.getFunctionAccess().getFUNCTIONKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFunctionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionAccess().getParametersParameterListParserRuleCall_3_0());
				}
				lv_parameters_3_0=ruleParameterList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionRule());
					}
					set(
						$current,
						"parameters",
						lv_parameters_3_0,
						"org.emoflon.express.Express.ParameterList");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getFunctionAccess().getRightParenthesisKeyword_4());
		}
		(
			otherlv_5=':'
			{
				newLeafNode(otherlv_5, grammarAccess.getFunctionAccess().getColonKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionAccess().getReturnTypeReferenceOrValueParserRuleCall_5_1_0());
					}
					lv_returnType_6_0=ruleReferenceOrValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionRule());
						}
						set(
							$current,
							"returnType",
							lv_returnType_6_0,
							"org.emoflon.express.Express.ReferenceOrValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_7=';'
		{
			newLeafNode(otherlv_7, grammarAccess.getFunctionAccess().getSemicolonKeyword_6());
		}
		otherlv_8='...'
		{
			newLeafNode(otherlv_8, grammarAccess.getFunctionAccess().getFullStopFullStopFullStopKeyword_7());
		}
		otherlv_9='END_FUNCTION;'
		{
			newLeafNode(otherlv_9, grammarAccess.getFunctionAccess().getEND_FUNCTIONKeyword_8());
		}
	)
;

// Entry rule entryRuleParameterList
entryRuleParameterList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterListRule()); }
	iv_ruleParameterList=ruleParameterList
	{ $current=$iv_ruleParameterList.current; }
	EOF;

// Rule ParameterList
ruleParameterList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterListAccess().getParametersParameterParserRuleCall_0_0());
				}
				lv_parameters_0_0=ruleParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterListRule());
					}
					add(
						$current,
						"parameters",
						lv_parameters_0_0,
						"org.emoflon.express.Express.Parameter");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=';'
			{
				newLeafNode(otherlv_1, grammarAccess.getParameterListAccess().getSemicolonKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getParameterListAccess().getParametersParameterParserRuleCall_1_1_0());
					}
					lv_parameters_2_0=ruleParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParameterListRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_2_0,
							"org.emoflon.express.Express.Parameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	iv_ruleParameter=ruleParameter
	{ $current=$iv_ruleParameter.current; }
	EOF;

// Rule Parameter
ruleParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getParameterAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterAccess().getTypeReferenceOrValueParserRuleCall_2_0());
				}
				lv_type_2_0=ruleReferenceOrValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"org.emoflon.express.Express.ReferenceOrValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleUserDefinedTypeList
entryRuleUserDefinedTypeList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUserDefinedTypeListRule()); }
	iv_ruleUserDefinedTypeList=ruleUserDefinedTypeList
	{ $current=$iv_ruleUserDefinedTypeList.current; }
	EOF;

// Rule UserDefinedTypeList
ruleUserDefinedTypeList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUserDefinedTypeListRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getUserDefinedTypeListAccess().getElementsUserDefinedTypeCrossReference_0_0());
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getUserDefinedTypeListAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUserDefinedTypeListRule());
						}
					}
					otherlv_2=RULE_ID
					{
						newLeafNode(otherlv_2, grammarAccess.getUserDefinedTypeListAccess().getElementsUserDefinedTypeCrossReference_1_1_0());
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	iv_ruleAttribute=ruleAttribute
	{ $current=$iv_ruleAttribute.current; }
	EOF;

// Rule Attribute
ruleAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAttributeAccess().getIntegerAttributeParserRuleCall_0());
		}
		this_IntegerAttribute_0=ruleIntegerAttribute
		{
			$current = $this_IntegerAttribute_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAttributeAccess().getStringAttributeParserRuleCall_1());
		}
		this_StringAttribute_1=ruleStringAttribute
		{
			$current = $this_StringAttribute_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAttributeAccess().getRealAttributeParserRuleCall_2());
		}
		this_RealAttribute_2=ruleRealAttribute
		{
			$current = $this_RealAttribute_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAttributeAccess().getBooleanAttributeParserRuleCall_3());
		}
		this_BooleanAttribute_3=ruleBooleanAttribute
		{
			$current = $this_BooleanAttribute_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAttributeAccess().getReferenceAttributeParserRuleCall_4());
		}
		this_ReferenceAttribute_4=ruleReferenceAttribute
		{
			$current = $this_ReferenceAttribute_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleIntegerAttribute
entryRuleIntegerAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntegerAttributeRule()); }
	iv_ruleIntegerAttribute=ruleIntegerAttribute
	{ $current=$iv_ruleIntegerAttribute.current; }
	EOF;

// Rule IntegerAttribute
ruleIntegerAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getIntegerAttributeAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIntegerAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getIntegerAttributeAccess().getColonKeyword_1());
		}
		(
			(
				lv_optional_2_0='OPTIONAL'
				{
					newLeafNode(lv_optional_2_0, grammarAccess.getIntegerAttributeAccess().getOptionalOPTIONALKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIntegerAttributeRule());
					}
					setWithLastConsumed($current, "optional", lv_optional_2_0 != null, "OPTIONAL");
				}
			)
		)?
		otherlv_3='INTEGER'
		{
			newLeafNode(otherlv_3, grammarAccess.getIntegerAttributeAccess().getINTEGERKeyword_3());
		}
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getIntegerAttributeAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleStringAttribute
entryRuleStringAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringAttributeRule()); }
	iv_ruleStringAttribute=ruleStringAttribute
	{ $current=$iv_ruleStringAttribute.current; }
	EOF;

// Rule StringAttribute
ruleStringAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getStringAttributeAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStringAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getStringAttributeAccess().getColonKeyword_1());
		}
		(
			(
				lv_optional_2_0='OPTIONAL'
				{
					newLeafNode(lv_optional_2_0, grammarAccess.getStringAttributeAccess().getOptionalOPTIONALKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStringAttributeRule());
					}
					setWithLastConsumed($current, "optional", lv_optional_2_0 != null, "OPTIONAL");
				}
			)
		)?
		otherlv_3='STRING'
		{
			newLeafNode(otherlv_3, grammarAccess.getStringAttributeAccess().getSTRINGKeyword_3());
		}
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getStringAttributeAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleRealAttribute
entryRuleRealAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRealAttributeRule()); }
	iv_ruleRealAttribute=ruleRealAttribute
	{ $current=$iv_ruleRealAttribute.current; }
	EOF;

// Rule RealAttribute
ruleRealAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getRealAttributeAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRealAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getRealAttributeAccess().getColonKeyword_1());
		}
		(
			(
				lv_optional_2_0='OPTIONAL'
				{
					newLeafNode(lv_optional_2_0, grammarAccess.getRealAttributeAccess().getOptionalOPTIONALKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRealAttributeRule());
					}
					setWithLastConsumed($current, "optional", lv_optional_2_0 != null, "OPTIONAL");
				}
			)
		)?
		otherlv_3='REAL'
		{
			newLeafNode(otherlv_3, grammarAccess.getRealAttributeAccess().getREALKeyword_3());
		}
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getRealAttributeAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleBooleanAttribute
entryRuleBooleanAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanAttributeRule()); }
	iv_ruleBooleanAttribute=ruleBooleanAttribute
	{ $current=$iv_ruleBooleanAttribute.current; }
	EOF;

// Rule BooleanAttribute
ruleBooleanAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getBooleanAttributeAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBooleanAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getBooleanAttributeAccess().getColonKeyword_1());
		}
		(
			(
				lv_optional_2_0='OPTIONAL'
				{
					newLeafNode(lv_optional_2_0, grammarAccess.getBooleanAttributeAccess().getOptionalOPTIONALKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBooleanAttributeRule());
					}
					setWithLastConsumed($current, "optional", lv_optional_2_0 != null, "OPTIONAL");
				}
			)
		)?
		otherlv_3='BOOLEAN'
		{
			newLeafNode(otherlv_3, grammarAccess.getBooleanAttributeAccess().getBOOLEANKeyword_3());
		}
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getBooleanAttributeAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleReferenceAttribute
entryRuleReferenceAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReferenceAttributeRule()); }
	iv_ruleReferenceAttribute=ruleReferenceAttribute
	{ $current=$iv_ruleReferenceAttribute.current; }
	EOF;

// Rule ReferenceAttribute
ruleReferenceAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getReferenceAttributeAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReferenceAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getReferenceAttributeAccess().getColonKeyword_1());
		}
		(
			(
				lv_optional_2_0='OPTIONAL'
				{
					newLeafNode(lv_optional_2_0, grammarAccess.getReferenceAttributeAccess().getOptionalOPTIONALKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReferenceAttributeRule());
					}
					setWithLastConsumed($current, "optional", lv_optional_2_0 != null, "OPTIONAL");
				}
			)
		)?
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReferenceAttributeRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getReferenceAttributeAccess().getReferenceUserDefinedTypeCrossReference_3_0());
				}
			)
		)
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getReferenceAttributeAccess().getSemicolonKeyword_4());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
