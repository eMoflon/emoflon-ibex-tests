package ferryman.gt
import "http://www.eclipse.org/emf/2002/Ecore"
import "platform:/resource/FerrymanProblem/model/FerrymanProblem.ecore"

/**
 * Finds a thing which is on a different bank than the ferryman.
 */
abstract pattern findFerryManAndThingOnDifferentBanks {
	[=] bankOfFerryMan: Bank

	[=] bankOfThings: Bank

	[=] ferryMan: FerryMan {
		[=] -isAt -> bankOfFerryMan
	}

	[=] eater: Thing {
		[=] -isAt -> bankOfThings
	}
};

/**
 * If the ferryman is not on the same bank, 
 * the wolf can eat the goat and the goat can eat the cabbage.
 */
rule eat
refines findFerryManAndThingOnDifferentBanks {
	@refines= findFerryManAndThingOnDifferentBanks.eater
	[=] eater : Thing {
		[-] -likesToEat -> eaten
	}
	
	[-] eaten: Thing {
		[-] -isAt -> bankOfThings
	}
};

/**
 * Checks whether a thing can eat another.
 */
pattern canEat
refines findFerryManAndThingOnDifferentBanks {
	@refines= findFerryManAndThingOnDifferentBanks.eater
	[=] eater: Thing {
		[=]  -likesToEat -> eaten
	}

	[=] eaten: Thing {
		[=]  -isAt -> bankOfThings
	}
};

/**
 * Deletes the goat.
 */
rule killGoat {
	[-] goat: Goat {
		[-] -isAt -> bank
	}

	[=] bank: Bank
};