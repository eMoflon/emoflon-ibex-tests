#using ProcessCodeAdapter.*
#using AttrCondDefLibrary.*

#rule NodeToImportRule #extends AbstractNodeToImportRule #with ProcessCodeAdapter

#source {
	++invocationNode:Node {
		++ - parentNode->invocationsNode
	}
	otherFolder:Folder
	rootFolder:Folder {
		- subFolder->otherFolder
		- subFolder->folder
	}
	invocationsNode:Node {
		name == "IMPORTS"
	}
	folder:Folder
}

#target {
	++invocation:Import
	module:Module
	importedModule:Module {
		++ - import->invocation
	}
	task:Task {
		- module->module
		++ - imports->invocation
	}
	system:SystemModule {
		- allModules->module
		- allModules->importedModule
	}
}

#correspondence {
	++ nodeToImport :NodeToImport {
		#src->invocationNode
		#trg->invocation
	}
	fileToImportedModule :FolderToModule {
		#src->otherFolder
		#trg->importedModule
	}
}

#attributeConditions {
	eq_string(invocationNode.name, otherFolder.name)
}